- name: Gather package facts
  package_facts:
    manager: apt

- name: Ensure all necessary groups are created
  group: 
    name: "{{ item }}"
  loop: "{{ essential_groups }}"
    
- name: "Check if user {{ user_default_name }} exists"
  getent:
    database: passwd
    key:  "{{ user_default_name }}"
    fail_key: False
  register: user_exists

- name: Create a login user
  user:
    name: "{{ user_default_name }}"
    password: "{{ user_default_password }}"
    groups: 
      - docker
      - sudo
    state: present
    append: yes
    shell: "{{ user_shell }}"    
    system: no          
    createhome: yes 
    home: /home/{{ user_default_name }}
    update_password: on_create


- name: Chmod the user home directory
  file:
    path: /home/{{ user_default_name }}
    state: directory
    mode: 0755
    owner: "{{ user_default_name }}"
    group: "{{ user_default_name }}"
    recurse: yes

- name: Allow '{{ sudo_group }}' group to have passwordless sudo
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%{{ sudo_group }}'
    line: '%{{ sudo_group }} ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'

# - name: Print result
#   debug:
#     msg: "User {{ user_default_name }} exists: {{user_exists.failed}}"

# - name: Print default password
#   debug:
#     msg: "Password {{ user_default_password | password_hash('sha512')}}"

- name: Suppress login messages
  file:
    name: /home/{{ user_default_name }}/.hushlogin
    mode: 0644
    state: touch
    owner: "{{ user_default_name }}"
    group: "{{ user_default_name }}"
    modification_time: preserve
    access_time: preserve

- name: Update packages
  apt:
    update_cache : yes
    upgrade: yes

- name: Install Essential packages
  package: 
    name: "{{ essential_packages }}"
    state: latest

- name: Download and install Neovim AppImage
  get_url:
    url: https://github.com/neovim/neovim/releases/download/v0.9.4/nvim.appimage
    dest: /opt/neovim.appimage
    mode: 0755

- name: Create a directory for AppImages (optional)
  file:
    path: /opt/appimages
    state: directory
    mode: 0755

- name: Create a symbolic link to Neovim AppImage
  file:
    src: /opt/neovim.appimage
    dest: /opt/appimages/nvim
    state: link

- name: Check if AppImage is already PATH'd
  lineinfile:
    state: absent
    path: ".bashrc"
    regexp: "^export PATH=$PATH:/opt/appimages"
  check_mode: true
  changed_when: false # This just makes things look prettier in the logs
  register: check_appimage

- name: Add AppImage directory to PATH (optional)
  lineinfile:
    path: ".bashrc"
    line: 'export PATH=$PATH:/opt/appimages'
    state: present
  when: check_appimage.found == 0
  register: appimage_pathd

- name: Reload Shell
  shell: source .bashrc
  args:
    executable : /bin/bash
  when: check_appimage.changed == true

- name: Disable SSH Password Auth
  lineinfile:
    path: "/etc/ssh/sshd_config"
    regexp: '^#PasswordAuthentication yes'
    line: "PasswordAuthentication no"
    state: present
  register: sshd_config

- name: Restart SSH Daemon
  service:
    name: sshd
    state: restarted
  when: sshd_config.changed